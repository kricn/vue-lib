(self["webpackChunkmnyt_vue_lib"]=self["webpackChunkmnyt_vue_lib"]||[]).push([[160],{1160:function(n,e,o){var t={"./docs/button.md":3113,"./docs/icon.md":358,"./docs/installtion.md":9309};function l(n){var e=u(n);return o(e)}function u(n){if(!o.o(t,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return t[n]}l.keys=function(){return Object.keys(t)},l.resolve=u,n.exports=l,l.id=1160},3113:function(n,e,o){"use strict";o.r(e),o.d(e,{default:function(){return d}});var t=o(6252);const l={class:"content element-doc"},u=(0,t._)("h2",null,"按钮a",-1),c=(0,t._)("p",null,"这是一个按钮",-1),i=(0,t._)("div",null,[(0,t._)("p",null,"这是一个按钮")],-1),s=(0,t._)("pre",null,[(0,t._)("code",{class:"html"},"<template>\n  <k-button @click=\"onClick\">aadda</k-button>\n</template>\n\n<script setup>\n  const onClick = () => {\n    console.log('a')\n  }\n  return {\n    onClick\n  }\n<\/script>\n")],-1);function r(n,e,o,r,p,a){const m=(0,t.up)("element-demo0"),d=(0,t.up)("demo-block");return(0,t.wg)(),(0,t.iD)("section",l,[u,c,(0,t.Wm)(d,null,{source:(0,t.w5)((()=>[(0,t.Wm)(m)])),highlight:(0,t.w5)((()=>[s])),default:(0,t.w5)((()=>[i])),_:1})])}var p={name:"component-doc",components:{"element-demo0":function(){function n(n,e){const o=(0,t.up)("k-button");return(0,t.wg)(),(0,t.j4)(o,{onClick:n.onClick},{default:(0,t.w5)((()=>[(0,t.Uk)("aadda")])),_:1},8,["onClick"])}const e={setup(){const n=()=>{console.log("a")};return{onClick:n}}};return{render:n,...e}}()}},a=o(3744);const m=(0,a.Z)(p,[["render",r]]);var d=m},358:function(n,e,o){"use strict";o.r(e),o.d(e,{default:function(){return g}});var t=o(6252),l=o(3577);const u={class:"content element-doc"},c=(0,t._)("h2",null,"Icon 图标",-1),i=(0,t._)("p",null,"提供了一套常用的图标集合。",-1),s=(0,t._)("h3",null,"使用方法",-1),r=(0,t._)("p",null,[(0,t.Uk)("直接通过设置类名为 "),(0,t._)("code",null,"k-icon-iconName"),(0,t.Uk)(" 来使用即可。例如：")],-1),p=(0,t._)("pre",null,[(0,t._)("code",{class:"html"},'<i class="k-icon-menu-unfold"></i>\n<i class="k-icon-link"></i>\n<i class="k-icon-heart"></i>\n\n')],-1),a=(0,t._)("h3",null,"图标集合",-1),m={class:"icon-list"},d={class:"icon-name"};function h(n,e,o,h,b,k){const f=(0,t.up)("element-demo0"),g=(0,t.up)("demo-block");return(0,t.wg)(),(0,t.iD)("section",u,[c,i,s,r,(0,t.Wm)(g,null,{source:(0,t.w5)((()=>[(0,t.Wm)(f)])),highlight:(0,t.w5)((()=>[p])),_:1}),a,(0,t._)("ul",m,[((0,t.wg)(!0),(0,t.iD)(t.HY,null,(0,t.Ko)(n.$icon,(n=>((0,t.wg)(),(0,t.iD)("li",{key:n},[(0,t._)("span",null,[(0,t._)("i",{class:(0,l.C_)("k-icon-"+n)},null,2),(0,t._)("span",d,(0,l.zw)("k-icon-"+n),1)])])))),128))])])}var b={name:"component-doc",components:{"element-demo0":function(){const n=(0,t._)("i",{class:"k-icon-menu-unfold"},null,-1),e=(0,t._)("i",{class:"k-icon-link"},null,-1),o=(0,t._)("i",{class:"k-icon-heart"},null,-1);function l(l,u){return(0,t.wg)(),(0,t.iD)(t.HY,null,[n,e,o],64)}const u={};return{render:l,...u}}()}},k=o(3744);const f=(0,k.Z)(b,[["render",h]]);var g=f},9309:function(n,e,o){"use strict";o.r(e),o.d(e,{default:function(){return a}});var t=o(6252);const l={class:"content element-doc"},u=(0,t.uE)('<h2>安装与使用</h2><h3>npm 安装</h3><pre><code class="language-sh">npm install mnyt-vue-lib\n# 或\nyarn add mnyt-vue-lib\n</code></pre><h3>引入组件</h3><h4>完整引入</h4><p>在 main.js 中写入以下内容：</p><pre><code class="language-js">import { createApp } from &#39;vue&#39;\nimport App from &#39;./App.vue&#39;\nimport VueLib from &#39;mnyt-vue-lib&#39;\nimport &quot;mnyt-vue-lib/theme-chalk/src/index.scss&quot;\ncreateApp(App).use(VueLib).mount(&#39;#app&#39;)\n</code></pre><h4>按需引入</h4><p>借助 <a href="https://github.com/QingWei-Li/babel-plugin-component">babel-plugin-component</a>，我们可以只引入需要的组件，以达到减小项目体积的目的。</p><p>首先，安装 babel-plugin-component：</p><pre><code class="language-sh">npm install babel-plugin-component -D\n</code></pre><p>然后，将 .babelrc 修改为：</p><pre><code class="language-sh">{\n  &quot;presets&quot;: [[&quot;es2015&quot;, { &quot;modules&quot;: false }]],\n  &quot;plugins&quot;: [\n    [\n      &quot;component&quot;,\n      {\n        &quot;libraryName&quot;: &quot;mnyt-vue-lib&quot;,\n        &quot;styleLibraryName&quot;: &quot;theme-chalk&quot;\n      }\n    ]\n  ]\n}\n</code></pre><p>接下来，如果你只希望引入部分组件，比如 Button，那么需要在 main.js 中写入以下内容：</p><pre><code class="language-js">import { createApp } from &#39;vue&#39;\nimport App from &#39;./App.vue&#39;\nimport {Button} from &#39;mnyt-vue-lib&#39;\nimport &quot;mnyt-vue-lib/theme-chalk/src/index.scss&quot;\ncreateApp(App).use(Button).mount(&#39;#app&#39;)\n</code></pre><p>完整组件列表和引入方式（完整组件列表以 <a href="https://github.com/kricn/vue-lib/blob/master/build/components.json">components.json</a> 为准）</p><p><a href="https://github.com/kricn/vue-lib">仓库地址</a></p>',17),c=[u];function i(n,e){return(0,t.wg)(),(0,t.iD)("section",l,c)}var s=o(3744);const r={},p=(0,s.Z)(r,[["render",i]]);var a=p}}]);
//# sourceMappingURL=160.976bdd46.js.map